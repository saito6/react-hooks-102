{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\react-hooks-102\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\n\nconst App = props => {\n  const [name, setName] = useState(props.name);\n  const [price, setPrice] = useState(props.price);\n\n  const reset = () => {\n    setPrice(props.price);\n    setName(props.name);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"\\u73FE\\u5728\\u306E\", name, \"\\u306F\\u3001\", price, \"\\u5186\\u3067\\u3059\\u3002\"), React.createElement(\"button\", {\n    onClick: () => setPrice(price + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"+1\"), React.createElement(\"button\", {\n    onClick: () => setPrice(price - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"-1\"), React.createElement(\"button\", {\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(\"input\", {\n    value: name,\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n};\n\nApp.defaultProps = {\n  name: 'サンプル',\n  price: 1000\n};\nexport default App;","map":{"version":3,"sources":["C:/react/react-hooks-102/src/App.js"],"names":["React","useState","App","props","name","setName","price","setPrice","reset","e","target","value","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAEnB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBJ,QAAQ,CAACE,KAAK,CAACC,IAAP,CAA/B;AACA,QAAM,CAACE,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAACE,KAAK,CAACG,KAAP,CAAjC;;AAEA,QAAME,KAAK,GAAG,MAAK;AACjBD,IAAAA,QAAQ,CAACJ,KAAK,CAACG,KAAP,CAAR;AACAD,IAAAA,OAAO,CAACF,KAAK,CAACC,IAAP,CAAP;AACD,GAHD;;AAKA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAOA,IAAP,kBAAeE,KAAf,6BADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAIC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAIC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,EAIE;AAAQ,IAAA,OAAO,EAAEE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAKE;AAAO,IAAA,KAAK,EAAEJ,IAAd;AAAoB,IAAA,QAAQ,EAAEK,CAAC,IAAEJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CAnBD;;AAqBAT,GAAG,CAACU,YAAJ,GAAmB;AACjBR,EAAAA,IAAI,EAAE,MADW;AAEjBE,EAAAA,KAAK,EAAE;AAFU,CAAnB;AAKA,eAAeJ,GAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst App = props => {\n\n  const [name,setName] = useState(props.name);\n  const [price,setPrice] = useState(props.price);\n\n  const reset = () =>{\n    setPrice(props.price);\n    setName(props.name);\n  }\n\n  return (\n    <>\n      <p>現在の{name}は、{price}円です。</p>\n      <button onClick={()=>setPrice(price + 1)}>+1</button>\n      <button onClick={()=>setPrice(price - 1)}>-1</button>\n      <button onClick={reset}>Reset</button>\n      <input value={name} onChange={e=>setName(e.target.value)}/>\n    </>\n  );\n}\n\nApp.defaultProps = {\n  name: 'サンプル',\n  price: 1000\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}